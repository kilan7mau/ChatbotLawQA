import logging
from functools import lru_cache
from langchain.retrievers.document_compressors import CrossEncoderReranker
from langchain_community.cross_encoders import HuggingFaceCrossEncoder
import config

logger = logging.getLogger(__name__)

# ƒê·∫∑t t√™n model v√†o m·ªôt h·∫±ng s·ªë ƒë·ªÉ d·ªÖ qu·∫£n l√Ω


@lru_cache(maxsize=1)
def get_reranker_compressor(top_n: int = 4):
    """
    T·∫£i v√† tr·∫£ v·ªÅ m·ªôt ƒë·ªëi t∆∞·ª£ng CrossEncoderReranker.
    S·ª≠ d·ª•ng lru_cache ƒë·ªÉ ƒë·∫£m b·∫£o model ch·ªâ ƒë∆∞·ª£c t·∫£i m·ªôt l·∫ßn duy nh·∫•t.
    """
    logger.info(f"üß† Loading Re-ranker model '{config.RERANKER_MODEL_NAME}'...")
    try:
        # T·∫£i model cross-encoder
        model = HuggingFaceCrossEncoder(model_name=config.RERANKER_MODEL_NAME)

        # T·∫°o ƒë·ªëi t∆∞·ª£ng compressor
        compressor = CrossEncoderReranker(model=model, top_n=top_n)

        logger.info("‚úÖ Re-ranker model is ready.")
        return compressor
    except Exception as e:
        logger.error(f"‚ùå Could not load Re-ranker model: {e}", exc_info=True)
        raise